# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type AccountResponse {
  message: String!
  statusCode: Float!
}

type AuthPayload {
  tokens: TokensPayload!
  user: User!
}

input ChangePasswordInput {
  email: String!
  newPassword: String!
  oldPassword: String!
}

input CreateUserInput {
  email: String!
  fullName: StringScalar!
  password: String!
  pronouns: String!
}

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  changePassword(changePasswordInput: ChangePasswordInput!): User!
  createUser(createUserInput: CreateUserInput!): AuthPayload!
  deactivateAccount(email: String!): AccountResponse!
  deleteAccount(id: Float!): AccountResponse!
  login(loginInput: LoginInput!): AuthPayload!
  refreshToken(refreshTokenInput: RefreshTokenInput!): TokensPayload!
  resetPassword(resetPasswordInput: ResetPasswordInput!): User!
  updateProfile(updateProfileInput: UpdateProfileInput!): Profile!
}

enum PrivacyOption {
  Friends
  Private
  Public
}

type Profile {
  bio: ProfileField!
  currentLocation: ProfileField!
  fullName: ProfileField!
  homeCountry: ProfileField
  id: Float!
  namePronunciation: ProfileField
  nickname: ProfileField
  profilePic: ProfileField
  pronouns: ProfileField!
  tdaGradYear: ProfileField!
  tdaGradYearBannerVisible: ProfileField
  userId: Float!
  website: ProfileField
}

type ProfileField {
  value: String!
  visibleTo: PrivacyOption!
}

input ProfileFieldInput {
  value: String!
  visibleTo: PrivacyOption
}

type Query {
  getUser(userId: Float!): User
}

input RefreshTokenInput {
  refreshToken: String!
  userId: Float!
}

input ResetPasswordInput {
  email: String!
  newPassword: String!
}

scalar StringScalar

type TokensPayload {
  accessToken: String!
  refreshToken: String!
}

input UpdateProfileInput {
  bio: ProfileFieldInput
  currentLocation: ProfileFieldInput
  fullName: ProfileFieldInput
  homeCountry: ProfileFieldInput
  nickname: ProfileFieldInput
  profilePic: ProfileFieldInput
  pronouns: ProfileFieldInput
  tdaGradYear: ProfileFieldInput
  tdaGradYearBannerVisible: ProfileFieldInput
  website: ProfileFieldInput
}

type User {
  email: String!
  id: Int!
  isActive: Boolean!
  passwordHash: String!
  profile: Profile!
}